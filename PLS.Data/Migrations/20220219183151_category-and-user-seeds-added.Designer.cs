// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PLS.Data.Concrete.EntityFramework.Contexts;

#nullable disable

namespace PLS.Data.Migrations
{
    [DbContext(typeof(PLSContext))]
    [Migration("20220219183151_category-and-user-seeds-added")]
    partial class categoryanduserseedsadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PLS.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(1695),
                            Description = ".NET Tech",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(1696),
                            Name = ".NET",
                            Note = "Initial"
                        });
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8952),
                            Description = "SuperAdmin has all permissions and can access to configurations.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8953),
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8959),
                            Description = "Admin has all permissions.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8960),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8964),
                            Description = "User can only update allowed resources.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(8964),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Sources", (string)null);
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TagDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 349, DateTimeKind.Local).AddTicks(368),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 349, DateTimeKind.Local).AddTicks(369),
                            TagDescription = ".NET is a free and open-source, managed computer software framework for Windows, Linux, and macOS operating systems.",
                            TagName = ".NET"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 349, DateTimeKind.Local).AddTicks(374),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 349, DateTimeKind.Local).AddTicks(375),
                            TagDescription = "Docker is a containerization engine for Linux and Windows.",
                            TagName = "Docker"
                        });
                });

            modelBuilder.Entity("PLS.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Initial",
                            CreatedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(7626),
                            Email = "testmail@gmail.com",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2022, 2, 19, 21, 31, 51, 348, DateTimeKind.Local).AddTicks(7627),
                            PasswordHash = new byte[] { 205, 24, 124, 0, 62, 254, 99, 20, 83, 253, 100, 161, 170, 25, 31, 247, 172, 176, 243, 120, 238, 180, 9, 13, 112, 232, 213, 9, 162, 244, 68, 246, 24, 8, 85, 124, 59, 145, 81, 202, 46, 197, 144, 150, 208, 191, 29, 53, 82, 121, 29, 218, 199, 246, 254, 208, 147, 226, 78, 38, 33, 62, 73, 170 },
                            PasswordSalt = new byte[] { 8, 216, 244, 69, 81, 81, 184, 245, 36, 138, 240, 108, 155, 170, 128, 249, 97, 151, 75, 207, 63, 118, 45, 103, 67, 46, 13, 131, 63, 221, 243, 112, 222, 235, 157, 147, 54, 245, 243, 117, 233, 99, 193, 177, 219, 245, 105, 94, 226, 135, 81, 119, 38, 130, 84, 169, 1, 241, 146, 98, 71, 207, 62, 102, 105, 203, 103, 152, 123, 223, 215, 72, 53, 24, 38, 117, 210, 208, 210, 173, 246, 59, 209, 79, 68, 103, 92, 96, 31, 71, 203, 91, 198, 55, 213, 144, 153, 21, 99, 22, 203, 201, 156, 105, 81, 36, 24, 217, 13, 33, 33, 174, 103, 200, 45, 60, 75, 87, 217, 224, 229, 125, 180, 25, 193, 235, 162, 188 },
                            RoleId = 1,
                            UserName = "FirstUser"
                        });
                });

            modelBuilder.Entity("SourceTag", b =>
                {
                    b.Property<int>("SourcesId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("SourcesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("SourceTag");
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Source", b =>
                {
                    b.HasOne("PLS.Entities.Concrete.Category", "Category")
                        .WithMany("Sources")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLS.Entities.Concrete.User", "User")
                        .WithMany("Sources")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PLS.Entities.Concrete.User", b =>
                {
                    b.HasOne("PLS.Entities.Concrete.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SourceTag", b =>
                {
                    b.HasOne("PLS.Entities.Concrete.Source", null)
                        .WithMany()
                        .HasForeignKey("SourcesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLS.Entities.Concrete.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("PLS.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PLS.Entities.Concrete.User", b =>
                {
                    b.Navigation("Sources");
                });
#pragma warning restore 612, 618
        }
    }
}
